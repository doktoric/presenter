// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.acme.presenter.web;

import com.acme.presenter.domain.Adress;
import com.acme.presenter.domain.Presentation;
import com.acme.presenter.domain.PresentationElement;
import com.acme.presenter.domain.PresenterUser;
import com.acme.presenter.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Adress, String> ApplicationConversionServiceFactoryBean.getAdressToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.acme.presenter.domain.Adress, java.lang.String>() {
            public String convert(Adress adress) {
                return new StringBuilder().append(adress.getCity()).append(" ").append(adress.getStreet()).append(" ").append(adress.getHouse()).toString();
            }
        };
    }
    
    public Converter<Long, Adress> ApplicationConversionServiceFactoryBean.getIdToAdressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.acme.presenter.domain.Adress>() {
            public com.acme.presenter.domain.Adress convert(java.lang.Long id) {
                return Adress.findAdress(id);
            }
        };
    }
    
    public Converter<String, Adress> ApplicationConversionServiceFactoryBean.getStringToAdressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.acme.presenter.domain.Adress>() {
            public com.acme.presenter.domain.Adress convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Adress.class);
            }
        };
    }
    
    public Converter<Presentation, String> ApplicationConversionServiceFactoryBean.getPresentationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.acme.presenter.domain.Presentation, java.lang.String>() {
            public String convert(Presentation presentation) {
                return new StringBuilder().append(presentation.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Presentation> ApplicationConversionServiceFactoryBean.getIdToPresentationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.acme.presenter.domain.Presentation>() {
            public com.acme.presenter.domain.Presentation convert(java.lang.Long id) {
                return Presentation.findPresentation(id);
            }
        };
    }
    
    public Converter<String, Presentation> ApplicationConversionServiceFactoryBean.getStringToPresentationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.acme.presenter.domain.Presentation>() {
            public com.acme.presenter.domain.Presentation convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Presentation.class);
            }
        };
    }
    
    public Converter<PresentationElement, String> ApplicationConversionServiceFactoryBean.getPresentationElementToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.acme.presenter.domain.PresentationElement, java.lang.String>() {
            public String convert(PresentationElement presentationElement) {
                return new StringBuilder().toString();
            }
        };
    }
    
    public Converter<Long, PresentationElement> ApplicationConversionServiceFactoryBean.getIdToPresentationElementConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.acme.presenter.domain.PresentationElement>() {
            public com.acme.presenter.domain.PresentationElement convert(java.lang.Long id) {
                return PresentationElement.findPresentationElement(id);
            }
        };
    }
    
    public Converter<String, PresentationElement> ApplicationConversionServiceFactoryBean.getStringToPresentationElementConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.acme.presenter.domain.PresentationElement>() {
            public com.acme.presenter.domain.PresentationElement convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PresentationElement.class);
            }
        };
    }
    
    public Converter<PresenterUser, String> ApplicationConversionServiceFactoryBean.getPresenterUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.acme.presenter.domain.PresenterUser, java.lang.String>() {
            public String convert(PresenterUser presenterUser) {
                return new StringBuilder().append(presenterUser.getFirstName()).append(" ").append(presenterUser.getLastName()).append(" ").append(presenterUser.getUserName()).append(" ").append(presenterUser.getEmail()).toString();
            }
        };
    }
    
    public Converter<Long, PresenterUser> ApplicationConversionServiceFactoryBean.getIdToPresenterUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.acme.presenter.domain.PresenterUser>() {
            public com.acme.presenter.domain.PresenterUser convert(java.lang.Long id) {
                return PresenterUser.findPresenterUser(id);
            }
        };
    }
    
    public Converter<String, PresenterUser> ApplicationConversionServiceFactoryBean.getStringToPresenterUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.acme.presenter.domain.PresenterUser>() {
            public com.acme.presenter.domain.PresenterUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PresenterUser.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAdressToStringConverter());
        registry.addConverter(getIdToAdressConverter());
        registry.addConverter(getStringToAdressConverter());
        registry.addConverter(getPresentationToStringConverter());
        registry.addConverter(getIdToPresentationConverter());
        registry.addConverter(getStringToPresentationConverter());
        registry.addConverter(getPresentationElementToStringConverter());
        registry.addConverter(getIdToPresentationElementConverter());
        registry.addConverter(getStringToPresentationElementConverter());
        registry.addConverter(getPresenterUserToStringConverter());
        registry.addConverter(getIdToPresenterUserConverter());
        registry.addConverter(getStringToPresenterUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
